{"meta":{"title":"一路逆风","subtitle":null,"description":"细雨带风湿透黄昏的街道","author":"一路逆风","url":"https://yilunifeng.github.io"},"pages":[{"title":"about","date":"2017-09-06T10:50:01.000Z","updated":"2017-09-06T10:50:01.243Z","comments":true,"path":"about/index.html","permalink":"https://yilunifeng.github.io/about/index.html","excerpt":"","text":""},{"title":"相册","date":"2017-09-07T14:56:47.012Z","updated":"2017-09-07T14:56:46.917Z","comments":true,"path":"photo/index.html","permalink":"https://yilunifeng.github.io/photo/index.html","excerpt":"","text":""},{"title":"","date":"2017-09-07T13:47:22.476Z","updated":"2017-09-07T13:47:22.476Z","comments":true,"path":"photo/output.json","permalink":"https://yilunifeng.github.io/photo/output.json","excerpt":"","text":"[]"},{"title":"","date":"2017-09-07T14:56:48.181Z","updated":"2017-09-07T14:56:48.007Z","comments":true,"path":"photo/tool.js","permalink":"https://yilunifeng.github.io/photo/tool.js","excerpt":"","text":"\"use strict\"; const fs = require(\"fs\"); const path = \"../../photos\"; fs.readdir(path, function (err, files) { if (err) { return; } let arr = []; (function iterator(index) { if (index == files.length) { fs.writeFile(\"output.json\", JSON.stringify(arr, null, \"\\t\")); return; } fs.stat(path + \"/\" + files[index], function (err, stats) { if (err) { return; } if (stats.isFile()) { arr.push(files[index]); } iterator(index + 1); }) }(0)); });"},{"title":"tags","date":"2017-09-06T10:51:03.000Z","updated":"2017-09-06T10:51:03.485Z","comments":true,"path":"tags/index.html","permalink":"https://yilunifeng.github.io/tags/index.html","excerpt":"","text":""},{"title":"随笔","date":"2017-09-06T10:51:28.000Z","updated":"2017-09-06T10:51:28.718Z","comments":true,"path":"随笔/index.html","permalink":"https://yilunifeng.github.io/随笔/index.html","excerpt":"","text":""}],"posts":[{"title":"spring重温学习笔记","slug":"spring重温学习笔记","date":"2017-09-18T06:57:27.000Z","updated":"2017-09-18T07:14:56.229Z","comments":true,"path":"2017/09/18/spring重温学习笔记/","link":"","permalink":"https://yilunifeng.github.io/2017/09/18/spring重温学习笔记/","excerpt":"spring IOCspring 中对于类加载文件的理解 spring中提供了两种对于ioc容器获取bean的方式（两种访问接口）： beanFactory:通过classPathResource加载类路径下的配置文件 创建beanFactory对象DefaultListableBeanFactory 通过XmlBeanDefinitionReader对象加载BeanFactory 根据getBean方法得到对应实例对象","text":"spring IOCspring 中对于类加载文件的理解 spring中提供了两种对于ioc容器获取bean的方式（两种访问接口）： beanFactory:通过classPathResource加载类路径下的配置文件 创建beanFactory对象DefaultListableBeanFactory 通过XmlBeanDefinitionReader对象加载BeanFactory 根据getBean方法得到对应实例对象 ApplicationContent接口是基于BeanFactory对象的上层实现，扩展了声明周期，框架 事件，国际化的功能 ClassPathXmlApplicationContent对象加载类文件下的bean.xml 或者FileSystemXmlApplicationContent对象加载文件路径下的bean.xml 调用ClassPathXmlApplicationContent对象实例getBean()方法取得bean 通过XmlBeanDefinitionReader对象加载BeanFactory 根据getBean方法得到对应实例对象","categories":[],"tags":[{"name":"spring","slug":"spring","permalink":"https://yilunifeng.github.io/tags/spring/"}]},{"title":"917","slug":"917","date":"2017-09-17T11:29:20.000Z","updated":"2017-09-17T11:29:20.245Z","comments":true,"path":"2017/09/17/917/","link":"","permalink":"https://yilunifeng.github.io/2017/09/17/917/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"对requestbody和responsebody注解的学习","slug":"对requestbody和responsebody注解的学习","date":"2017-09-08T01:36:42.000Z","updated":"2017-09-08T01:41:49.971Z","comments":true,"path":"2017/09/08/对requestbody和responsebody注解的学习/","link":"","permalink":"https://yilunifeng.github.io/2017/09/08/对requestbody和responsebody注解的学习/","excerpt":"","text":"她把眼泪留在落幕以后-苏濮 @RequestBody1. 该注解用于读取Request请求的body部分数据，使用系统默认配置的HttpMessageConverter进行解析，然后把相应的数据绑定到要返回的对象上； 2. 再把HttpMessageConverter返回的对象数据绑定到 controller中方法的参数上。","categories":[],"tags":[{"name":"spring","slug":"spring","permalink":"https://yilunifeng.github.io/tags/spring/"}]},{"title":"hexo搭建之对目录和标签的改造","slug":"hexo搭建之对目录和标签的改造","date":"2017-09-07T06:25:42.000Z","updated":"2017-09-07T06:56:57.872Z","comments":true,"path":"2017/09/07/hexo搭建之对目录和标签的改造/","link":"","permalink":"https://yilunifeng.github.io/2017/09/07/hexo搭建之对目录和标签的改造/","excerpt":"","text":"标签的使用分类 对于标签的使用：直接在生成文章后在对应的tags后输入标签即可例如 title: hexo搭建之对目录和标签的改造 date: 2017-09-07 14:25:42 tags: -日记 对于目录的改造需要对目录进行编写","categories":[],"tags":[{"name":"日记","slug":"日记","permalink":"https://yilunifeng.github.io/tags/日记/"}]},{"title":"学习日记","slug":"Submit之Markdown测试","date":"2017-09-06T13:10:34.000Z","updated":"2017-09-07T06:57:28.732Z","comments":true,"path":"2017/09/06/Submit之Markdown测试/","link":"","permalink":"https://yilunifeng.github.io/2017/09/06/Submit之Markdown测试/","excerpt":"九月六日的Markdown基本语法 标题段落应用语法学习 关于标题和段落格式 文章标题要以#开头,任意与否对称结束- - 文章标题以#与h1-h6对称 关于引用使用&gt;来引用，以及二级引用使用&gt;&gt;使用其来控制样式 关于代码块的格式 这是一个代码块。 return shell_exec(&quot;echo $input | $markdown_script&quot;);","text":"九月六日的Markdown基本语法 标题段落应用语法学习 关于标题和段落格式 文章标题要以#开头,任意与否对称结束- - 文章标题以#与h1-h6对称 关于引用使用&gt;来引用，以及二级引用使用&gt;&gt;使用其来控制样式 关于代码块的格式 这是一个代码块。 return shell_exec(&quot;echo $input | $markdown_script&quot;); 这是第一行列表项。 这是第二行列表项。 给出一些例子代码： 可爱的小晨晨i this is a Baidu inline link return shell_exec(&quot;echo $input | $markdown_script&quot;); Baidu","categories":[],"tags":[{"name":"日记","slug":"日记","permalink":"https://yilunifeng.github.io/tags/日记/"}]},{"title":"搭建HEXO托管至Github之一","slug":"搭建HEXO托管至Github之一","date":"2017-09-06T10:42:53.000Z","updated":"2017-09-06T11:20:45.375Z","comments":true,"path":"2017/09/06/搭建HEXO托管至Github之一/","link":"","permalink":"https://yilunifeng.github.io/2017/09/06/搭建HEXO托管至Github之一/","excerpt":"","text":"搭建过程：坑坑洼洼！真的是醉了，都是坑啊！ 现在要实现的功能是百度统计和评论功能，摸索一下 - -","categories":[],"tags":[]},{"title":"article title","slug":"article-title","date":"2017-09-05T13:10:34.000Z","updated":"2017-09-07T06:31:15.401Z","comments":true,"path":"2017/09/05/article-title/","link":"","permalink":"https://yilunifeng.github.io/2017/09/05/article-title/","excerpt":"","text":"今天是我的blog的诞生日，真的很高兴！ 以后可以用来书写笔记，记录代码过程中的问题与总结，分享生活上的乐趣和看法经验 ，真是居家旅行、杀人越货、谋财害命之必备佳品！ 哈哈，以后可以记录生活点滴，nice!","categories":[],"tags":[{"name":"生活点滴","slug":"生活点滴","permalink":"https://yilunifeng.github.io/tags/生活点滴/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-09-05T12:58:24.622Z","updated":"2017-09-05T12:58:24.622Z","comments":true,"path":"2017/09/05/hello-world/","link":"","permalink":"https://yilunifeng.github.io/2017/09/05/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}